name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build-release:
    needs: create-release
    name: Build - ${{ matrix.platform.target }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - target: x86_64-unknown-linux-gnu
            os: linux
            arch: x86_64
            docker_arch: amd64
          - target: aarch64-unknown-linux-gnu
            os: linux
            arch: aarch64
            docker_arch: arm64

    steps:
      - uses: actions/checkout@v3

      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0.0.17
        with:
          command: build
          target: ${{ matrix.platform.target }}
          args: "--release"
          working-directory: xt
          strip: true

      - name: Package Binary
        run: |
          cd xt/target/${{ matrix.platform.target }}/release
          tar czf xt-${{ matrix.platform.target }}.tar.gz xt
          shasum -a 256 xt-${{ matrix.platform.target }}.tar.gz > xt-${{ matrix.platform.target }}.tar.gz.sha256

      - name: Upload Release Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: xt/target/${{ matrix.platform.target }}/release/xt-${{ matrix.platform.target }}.tar.gz
          asset_name: xt-${{ matrix.platform.target }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload Checksum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: xt/target/${{ matrix.platform.target }}/release/xt-${{ matrix.platform.target }}.tar.gz.sha256
          asset_name: xt-${{ matrix.platform.target }}.tar.gz.sha256
          asset_content_type: text/plain

  docker-release:
    needs: build-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: xt
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository }}/xt:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}/xt:latest
